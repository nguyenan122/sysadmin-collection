server {
        listen       8123;
        server_name  _;
        #set_by_lua_file $request_headers /opt/nginx/lua/log-headers-http.lua;

	#01.LOCATION SUM
	location /sum {
		content_by_lua_block {
			local args = ngx.req.get_uri_args();
			ngx.say(args.a + args.b)
		}
	}


	#02.LOCATION_PROXY
    location / {
		access_log  logs/custom.log log_header;

       	#Step2: Config REPSONSE_BODY
       	lua_need_request_body on;
      
       	set $resp_body "";
       	body_filter_by_lua '
       	  local resp_body = string.sub(ngx.arg[1], 1, 1000)
       	  ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
       	  if ngx.arg[2] then
       	     ngx.var.resp_body = ngx.ctx.buffered
       	  end
       	';
      
       	#Step3: Config REQUEST_HEADER, RESPONSE_HEADER
       	set $req_header "";
       	set $resp_header "";
       	header_filter_by_lua ' 
       	  local h = ngx.req.get_headers()
       	  for k, v in pairs(h) do
       	      ngx.var.req_header = ngx.var.req_header .. k.."="..v.." "
       	  end
       	  local rh = ngx.resp.get_headers()
       	  for k, v in pairs(rh) do
       	      ngx.var.resp_header = ngx.var.resp_header .. k.."="..v.." "
       	  end
       	';	
		#STEP4: Proxy to	
		proxy_pass http://xxxxxxxxxxxxx:8888/;
    }


	#FINAL
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
