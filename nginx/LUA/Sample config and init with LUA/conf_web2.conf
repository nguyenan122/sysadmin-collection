server {
    listen 8888;
    server_name _;


#Remove Local IP F5
    set_real_ip_from xxxxxxxxxxxxx/24;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

###################################################### security.conf
    # security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    #add_header X-Frame-Options ALLOW; 
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # . files
    location ~ /\.(?!well-known) {
         	deny all;
         	}
#log
    access_log /opt/nginx/logs/app_api.access.log modlog_body;
    error_log  /opt/nginx/logs/app_api.error.log;

    location /sms_api/ {
###################################
	access_log  /opt/nginx/logs/app_api.access.log log_header;

       	#Step2: Config REPSONSE_BODY
       	lua_need_request_body on;
      
       	set $resp_body "";
       	body_filter_by_lua '
       	  local resp_body = string.sub(ngx.arg[1], 1, 1000)
       	  ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
       	  if ngx.arg[2] then
       	     ngx.var.resp_body = ngx.ctx.buffered
       	  end
       	';
      
       	#Step3: Config REQUEST_HEADER, RESPONSE_HEADER
       	set $req_header "";
       	set $resp_header "";
       	header_filter_by_lua ' 
       	  local h = ngx.req.get_headers()
       	  for k, v in pairs(h) do
       	      ngx.var.req_header = ngx.var.req_header .. k.."="..v.." "
       	  end
       	  local rh = ngx.resp.get_headers()
       	  for k, v in pairs(rh) do
       	      ngx.var.resp_header = ngx.var.resp_header .. k.."="..v.." "
       	  end
       	';	
##############################
	proxy_read_timeout 180s;

        proxy_http_version      1.1;
        proxy_cache_bypass      $http_upgrade;

        proxy_set_header Upgrade                        $http_upgrade;
        proxy_set_header Connection             "upgrade";
        proxy_set_header Host                           $host;
        proxy_set_header X-Real-IP                      $remote_addr;
        #proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For         $remote_addr;

        proxy_set_header X-Forwarded-Proto      $scheme;
        proxy_set_header X-Forwarded-Host       $host;
        proxy_set_header X-Forwarded-Port       $server_port;
        proxy_pass http://app_api/sms_api/;

	proxy_buffer_size   128k;
	proxy_buffers   4 256k;
	proxy_busy_buffers_size   256k;

        #deny IP    
        if ($banIP)   {
	    return 444;
	    #access_log off;
            access_log /opt/nginx/logs/app_api.banned.log modlog;
	  }     
}

####################################################### general.conf
    # favicon.ico
    location = /favicon.ico {
        	log_not_found off;
        	access_log off;
        }
    # robots.txt
    location = /robots.txt {
        	log_not_found off;
        	access_log off;
        }
    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
       

}
